name: enterprise CI targets

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  release: 
    types:
      - published


jobs:
  test-linux:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install non-python dependencies
      run: |
        sudo apt-get install libsuitesparse-dev
        curl -sSL https://raw.githubusercontent.com/jellis18/libstempo/master/install_tempo2.sh | sh
    - name: Install dependencies and package
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install flake8 pytest black pytest-cov
        python -m pip install -e .
    - name: Display Python, pip, setuptools, and all installed versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -m pip freeze
    - name: Run lint
      run: make lint
    - name: Test with pytest
      run: pytest --cov-config=.coveragerc --cov=enterprise --cov-report=xml
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true


  test-mac:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.6, 3.7, 3.8]

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install non-python dependencies
      run: |
        brew install suite-sparse
        curl -sSL https://raw.githubusercontent.com/jellis18/libstempo/master/install_tempo2.sh | sh
    - name: Install dependencies and package
      run: |
        python -m pip install --upgrade pip setuptools wheel
        python -m pip install flake8 pytest black pytest-cov
        python -m pip install -e .
    - name: Display Python, pip, setuptools, and all installed versions
      run: |
        python -c "import sys; print(f'Python {sys.version}')"
        python -c "import pip; print(f'pip {pip.__version__}')"
        python -c "import setuptools; print(f'setuptools {setuptools.__version__}')"
        python -m pip freeze
    - name: Run lint
      run: make lint
    - name: Test with pytest
      run: pytest --cov-config=.coveragerc --cov=enterprise --cov-report=xml
    - name: Codecov
      uses: codecov/codecov-action@v1
      with:
        fail_ci_if_error: true